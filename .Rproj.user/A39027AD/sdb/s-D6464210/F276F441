{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(knitr, warn.conflicts = FALSE)\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(ggplot2, warn.conflicts = FALSE)\n\nlibrary(tidyverse)\nlibrary(gplots)\nlibrary(rpart)\nlibrary(randomForest)\n\n\nshinyServer(\n  function(input, output) {\n    \n    # 3. wczytanie danych i 4. przetworzenie brakujacych danych\n    sledzie <- read.csv(\"sledzie.csv\", na.strings = \"?\")\n    # sledzie <- sledzie[, -1] # usuwam pierwszy wiersz z numeracja wierszy od 0 do n-1\n    \n    # 5. rozmiar zbioru i statystyki\n    dim(sledzie)\n    str(sledzie)\n    summary(sledzie)\n    \n    # sprawdz braki, ile ich jest\n    apply(sledzie, 2, function(x) sum(is.na(x)))\n    \n    # sprawdz braki, jaki procent\n    apply(sledzie, 2, function(x) sum(is.na(x))/length(x)) # ok 0,03%\n    \n    # czym zastapic braki? moze srednia?\n    sledzie <- data.frame(apply(sledzie, 2, function(x) {\n      ind <- which(is.na(x))\n      srednia <- mean(x, na.rm = TRUE)\n      x[ind] <- srednia\n      x\n    }))\n    \n    \n    output$histogram <- renderPlot({\n      title <- \"Fishes histogram\"\n       hist(runif(sledzie))\n    })\n    \n  }\n)",
    "created" : 1484424144841.000,
    "dirty" : false,
    "encoding" : "CP1250",
    "folds" : "",
    "hash" : "1161909706",
    "id" : "F276F441",
    "lastKnownWriteTime" : 1484687514,
    "last_content_update" : 1484687514029,
    "path" : "E:/R/Shiny/fishAnalysysShinyApp/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}